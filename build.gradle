plugins {
    id "com.jfrog.bintray" version "1.1"
    id "com.github.jruby-gradle.base" version "1.5.0"
    id "java"
    id "checkstyle"
    id "idea"
}
import com.github.jrubygradle.JRubyExec
repositories {
    mavenCentral()
    jcenter()
}
configurations {
    provided
}

version = "0.1.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile  "org.embulk:embulk-core:0.9.22"
    compile  "io.netty:netty-codec:4.0.44.Final"
    compile  "io.netty:netty-handler:4.0.44.Final"
    compile  "io.netty:netty-transport:4.0.44.Final"
    compile "org.msgpack:msgpack-core:0.8.11"
    implementation("com.datastax.cassandra:cassandra-driver-core:3.7.+") {
        exclude module: 'netty-buffer'
        exclude module: 'netty-codec'
        exclude module: 'netty-common'
        exclude module: 'netty-handler'
        exclude module: 'netty-transport'
    }
    provided "org.embulk:embulk-core:0.9.22"

    testCompile "junit:junit:4.+"
    testImplementation "org.cassandraunit:cassandra-unit:3.11.2.0"
    testImplementation "org.embulk:embulk-deps-buffer:0.9.22"
    testImplementation "org.embulk:embulk-test:0.9.22"
    testImplementation "org.embulk:embulk-standards:0.9.22"
}


task classpath(type: Copy, dependsOn: ["jar"]) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.runtime - configurations.provided + files(jar.archivePath))
    into "classpath"
}
clean { delete "classpath" }

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

task gem(type: JRubyExec, dependsOn: ["gemspec", "classpath"]) {
    jrubyArgs "-S"
    script "gem"
    scriptArgs "build", "${project.name}.gemspec"
    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "pkg") }
}

task gemPush(type: JRubyExec, dependsOn: ["gem"]) {
    jrubyArgs "-S"
    script "gem"
    scriptArgs "push", "pkg/${project.name}-${project.version}.gem"
}

task "package"(dependsOn: ["gemspec", "classpath"]) {
    doLast {
        println "> Build succeeded."
        println "> You can run embulk with '-L ${file(".").absolutePath}' argument."
    }
}

task gemspec {
    ext.gemspecFile = file("${project.name}.gemspec")
    inputs.file "build.gradle"
    outputs.file gemspecFile
    doLast { gemspecFile.write($/
Gem::Specification.new do |spec|
  spec.name          = "${project.name}"
  spec.version       = "${project.version}"
  spec.authors       = ["joker1007"]
  spec.summary       = %[Cassandra input plugin for Embulk]
  spec.description   = %[Loads records from Cassandra.]
  spec.email         = ["kakyoin.hierophant@gmail.com"]
  spec.licenses      = ["MIT"]
  # TODO set this: spec.homepage      = "https://github.com/joker1007/embulk-input-cassandra"

  spec.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
  spec.test_files    = spec.files.grep(%r"^(test|spec)/")
  spec.require_paths = ["lib"]

  spec.add_development_dependency 'bundler', ['~> 1.0']
  spec.add_development_dependency 'rake', ['~> 12.0']
end
/$)
    }
}
clean { delete "${project.name}.gemspec" }
